/*******************************************************************************
* Copyright Regione Piemonte - 2023
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/


/*
 * 
 */

package it.csi.dma.apiopsan.screeningservice.dmacc;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.7
 * Wed Sep 14 14:45:37 CEST 2022
 * Generated source version: 2.2.7
 * 
 */


@WebServiceClient(name = "ScreeningService", 
                  wsdlLocation = "https://tst-bejava-dma.isan.csi.it/dmaccrti/ScreeningService?wsdl",
                  targetNamespace = "http://dmacc.csi.it/") 
public class ScreeningService_Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://dmacc.csi.it/", "ScreeningService");
    public final static QName ScreeningServicePort = new QName("http://dmacc.csi.it/", "ScreeningServicePort");
    static {
        URL url = null;
        try {
            url = new URL("https://tst-bejava-dma.isan.csi.it/dmaccrti/ScreeningService?wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from https://tst-bejava-dma.isan.csi.it/dmaccrti/ScreeningService?wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ScreeningService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ScreeningService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ScreeningService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns ScreeningService
     */
    @WebEndpoint(name = "ScreeningServicePort")
    public ScreeningService getScreeningServicePort() {
        return super.getPort(ScreeningServicePort, ScreeningService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ScreeningService
     */
    @WebEndpoint(name = "ScreeningServicePort")
    public ScreeningService getScreeningServicePort(WebServiceFeature... features) {
        return super.getPort(ScreeningServicePort, ScreeningService.class, features);
    }

}
