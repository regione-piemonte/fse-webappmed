/*******************************************************************************
* Copyright Regione Piemonte - 2023
* SPDX-License-Identifier: EUPL-1.2
******************************************************************************/

package it.csi.dma.apiopsan.external.cldocumentiiniservice.dmaclbl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.0
 * 2022-12-22T11:48:26.748+01:00
 * Generated source version: 3.5.0
 *
 */
@WebServiceClient(name = "CLDocumentiINIService",
                  wsdlLocation = "https://tst-be-dma.isan.csi.it/dmacl1medrti/services/CLDocumentiINIService?wsdl",
                  targetNamespace = "http://dmaclbl.csi.it/")
public class CLDocumentiINIService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIService");
    public final static QName CLDocumentiINIServiceHttpsSoap11Endpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpsSoap11Endpoint");
    public final static QName CLDocumentiINIServiceHttpsEndpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpsEndpoint");
    public final static QName CLDocumentiINIServiceHttpEndpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpEndpoint");
    public final static QName CLDocumentiINIServiceHttpSoap12Endpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpSoap12Endpoint");
    public final static QName CLDocumentiINIServiceHttpsSoap12Endpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpsSoap12Endpoint");
    public final static QName CLDocumentiINIServiceHttpSoap11Endpoint = new QName("http://dmaclbl.csi.it/", "CLDocumentiINIServiceHttpSoap11Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("https://tst-be-dma.isan.csi.it/dmacl1medrti/services/CLDocumentiINIService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CLDocumentiINIService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://tst-be-dma.isan.csi.it/dmacl1medrti/services/CLDocumentiINIService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CLDocumentiINIService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CLDocumentiINIService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CLDocumentiINIService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CLDocumentiINIService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CLDocumentiINIService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CLDocumentiINIService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsSoap11Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsSoap11Endpoint() {
        return super.getPort(CLDocumentiINIServiceHttpsSoap11Endpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsSoap11Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpsSoap11Endpoint, CLDocumentiINIServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsEndpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsEndpoint() {
        return super.getPort(CLDocumentiINIServiceHttpsEndpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsEndpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsEndpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpsEndpoint, CLDocumentiINIServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpEndpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpEndpoint() {
        return super.getPort(CLDocumentiINIServiceHttpEndpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpEndpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpEndpoint, CLDocumentiINIServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpSoap12Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpSoap12Endpoint() {
        return super.getPort(CLDocumentiINIServiceHttpSoap12Endpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpSoap12Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpSoap12Endpoint, CLDocumentiINIServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsSoap12Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsSoap12Endpoint() {
        return super.getPort(CLDocumentiINIServiceHttpsSoap12Endpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpsSoap12Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpsSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpsSoap12Endpoint, CLDocumentiINIServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpSoap11Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpSoap11Endpoint() {
        return super.getPort(CLDocumentiINIServiceHttpSoap11Endpoint, CLDocumentiINIServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CLDocumentiINIServicePortType
     */
    @WebEndpoint(name = "CLDocumentiINIServiceHttpSoap11Endpoint")
    public CLDocumentiINIServicePortType getCLDocumentiINIServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CLDocumentiINIServiceHttpSoap11Endpoint, CLDocumentiINIServicePortType.class, features);
    }

}
